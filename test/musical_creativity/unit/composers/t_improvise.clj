(ns musical-creativity.unit.composers.t-improvise
  (:require
   [midje.sweet :refer :all]
   [musical-creativity.composers.improvise :refer :all]
   [data.forgray :refer :all]))

(namespace-state-changes (before :facts (remove-data!)))

(fact "creating a database"
  (create-a-complete-database '(forgray))

  (first (:grouping-names (@*lexicon-store* "lexicon-87-41-41"))) => #"forgray\[\d+\]"
  (@*groupings-store* "forgray[2]-97-99-41") => {:destination "forgray[2]-41-101-103",
                                                 :events '((59000 97 99 1 71) (59000 99 99 1 109) (59000 41 99 1 93 tie)),
                                                 :lexicon "lexicon-97-99-41",
                                                 :name 'forgray
                                                 :timing '(59000 59099)})

(fact "making lexicon name"
  (make-name-of-lexicon '(63 59 37)) => "lexicon-63-59-37")

(fact "removing ends"
  (create-a-complete-database '(forgray))

  ;(reset! *lexicon-store* {})

  (remove-ends '(lexicon-77-36 lexicon-77-36-74 lexicon-74-70-34)) =>
  '(lexicon-77-36 lexicon-77-36-74 lexicon-74-70-34))

(fact "choose begining grouping"
  (choose-beginning-grouping '("fourbros [110]-62-65-68-44-41-51")) => "fourbros [110]-62-65-68-44-41-51")

(fact "reduce ties"
  (reduce-ties '((0 35 133 1 102) (0 55 133 1 105))) => '((0 35 133 1 102) (0 55 133 1 105))

  (reduce-ties '((0 54 292 1 105 tie) (0 60 292 1 93 tie) (0 65 292 1 86 tie) (0 76 292 1 95 tie) (0 44 15184/193 1 69) (0 35 292 1 77 tie) (0 37 292 1 123 tie) (292 54 208 1 105 tie) (292 60 208 1 93 tie) (292 65 208 1 86 tie) (292 76 208 1 95 tie) (292 35 14092/125 1 77) (292 37 208 1 123 tie) (292 38 1404/25 1 83) (500 54 2500/307 1 105) (500 60 2500/307 1 93) (500 65 2500/307 1 86) (500 76 2500/307 1 95) (500 37 500 1 123 tie) (500 74 151000/307 1 80) (500 38 67500/307 1 83) (500 44 127500/307 1 73) (1000 37 500 1 123 tie) (1000 38 500 1 77 tie) (1500 37 500 1 123 tie) (1500 38 500 1 77 tie) (1500 35 500 1 86 tie) (2000 37 2763/197 1 123) (2000 38 33463/2167 1 77) (2000 35 18727/197 1 86) (2000 55 307 1 76 tie) (2000 64 307 1 65 tie) (2000 67 307 1 82 tie) (2000 69 307 1 82 tie) (2000 76 307 1 81 tie) (2000 36 307 1 110 tie) (2000 48 307 1 63 tie) (2307 55 193 1 76 tie) (2307 64 193 1 65 tie) (2307 67 193 1 82 tie) (2307 69 193 1 82 tie) (2307 76 193 1 81 tie) (2307 36 193 1 110 tie) (2307 48 193  tie) (2500 86 500 1 63 tie) (3000 55 500 1 76 tie) (3000 64 500 1 65 tie) (3000 67 500 1 82 tie) (3000 69 500 1 82 tie) (3000 76 500 1 81 tie) (3000 36 500 1 110 tie) (3000 48 500 1 63 tie) (3000 81 500 1 72 tie) (3000 86 500 1 63 tie) (3000 93 500 1 52 tie) (3500 55 500 1 76 tie) (3500 64 500 1 65 tie) (3500 67 500 1 82 tie) (3500 69 500 1 82 tie) (3500 76 500 1 81 tie) (3500 36 500 1 110 tie) (3500 48 500 1 63 tie) (3500 81 500 1 72 tie) (3500 86 500 1 63 tie) (3500 93 33500/151 1 52) (3500 98 65000/151 1 66) (4000 55 5 1 76 tie) (4000 64 5 1 65 tie) (4000 67 5 1 82 tie) (4000 69 5 1 82 tie) (4000 76 5 1 81 tie) (4000 36 5 1 110 tie) (4000 48 5 1 63 tie) (4000 81 5 1 72 tie) (4000 86 5 1 63 tie) (4000 101 73/25 1 58) (4005 55 495 1 76) (4005 64 495 1 65) (4005 67 495 1 82) (4005 69 495 1 82) (4005 76 495 1 81) (4005 36 495 1 110) (4005 48 495 1 63) (4005 81 18315/1396 1 72) (4005 86 10395/349 1 63) (4005 103 12870/349 1 81) (4500 59 312 1 25 tie) (4812 59 2444/29 1 25) (4812 51 188 1 25 tie) (5000 51 292 1 20) (5000 51 12118/13 1 20)))
  => '((0 54 156000/307 1 105) (0 60 156000/307 1 93) (0 65 156000/307 1 86) (0 76 156000/307 1 95) (0 44 15184/193 1 69) (0 35 50592/125 1 77) (0 37 396763/197 1 123) (292 38 1404/25 1 83) (500 74 151000/307 1 80) (500 38 67500/307 1 83) (500 44 127500/307 1 73) (1000 38 2200463/2167 1 77) (1500 35 117227/197 1 86) (2000 55 500 1 76) (2000 64 500 1 65) (2000 67 500 1 82) (2000 69 500 1 82) (2000 76 500 1 81) (2000 36 500 1 110) (2000 48 500 1 63) (2500 86 535640/349 1 63) (3000 55 1500 1 76) (3000 64 1500 1 65) (3000 67 1500 1 82) (3000 69 1500 1 82) (3000 76 1500 1 81) (3000 36 1500 1 110) (3000 48 1500 1 63) (3000 81 1421295/1396 1 72) (3000 93 109000/151 1 52) (3500 98 65000/151 1 66) (4000 101 73/25 1 58) (4005 103 12870/349 1 81) (4500 59 11492/29 1 25) (4812 51 480 1 25) (5000 51 12118/13 1 20)))

(fact "make playable"
  (create-a-complete-database '(forgray))
  (make-playable '("forgray[2]-55-65-70-75-48-48")) => '((0 55 101908/375 1 103)
                                                         (0 65 89717/375 1 102)
                                                         (0 70 89717/375 1 105)
                                                         (0 75 89717/375 1 92)
                                                         (0 48 803/3 1 94)
                                                         (0 48 101543/375 1 97)))
